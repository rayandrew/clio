import os
import sys
from snakemake.utils import min_version

from pathlib import Path

###### minimum snakemake version ######
min_version("8.0")

storage box:
    provider="fabric",
    username="u369179-sub3"

storage http:
    provider="http",

MSRC_CHUNKS = {
  "hm": 2,
  "mds": 2,
  "prn": 2,
  "proj": 5,
  "prxy": 2,
  "rsrch": 3,
  "src1": 3,
  "src2": 3,
  "stg": 2,
  "ts": 1,
  "usr": 3,
  "wdev": 4,
  "web": 4,
}

def http(url):
    return storage.http(url, keep_local=True)

def get_box_data(query):
    return storage.box(f"sftp://box.rs.ht:23/home/{query}", keep_local=True)

def get_msrc_data(trace):
    if trace in MSRC_CHUNKS:
        return [get_box_data(f"msrc/{trace}_{i}.csv.gz") for i in range(MSRC_CHUNKS[trace])]
    return [get_box_data(f"msrc/{trace}.csv.gz")]

rule msrc_standardize:
  input:
    lambda wildcards: get_msrc_data(wildcards.trace),
  output:
    "data/standardized/msrc/{trace}/{trace}.trace",
    "data/standardized/msrc/{trace}/log.txt",
  log:
    "logs/standardized/msrc/{trace}/{trace}.log",
  shell:
    "python -m clio.trace.standardizer msrc {input} --output $(dirname {output[0]})"

rule msrc_whole_analyze:
  input:
    "data/standardized/msrc/{trace}/{trace}.trace",
  output:
    "data/analysis/msrc/{trace}/whole/stats/stats.stats",
    "data/analysis/msrc/{trace}/whole/stats/stats.msgpack",
    "data/analysis/msrc/{trace}/whole/stats/log.txt",
  log:
    "logs/analysis/msrc/{trace}/whole/{trace}.log",
  shell:
    "python -m clio.trace.analyzer whole {input} --output $(dirname {output[0]})"

rule msrc_whole_plot_characteristic:
  input:
    "data/analysis/msrc/{trace}/whole/stats/stats.msgpack",
  output:
    directory("data/analysis/msrc/{trace}/whole/plots"),
    "data/analysis/msrc/{trace}/whole/plots/log.txt",
  log:
    "logs/analysis/msrc/{trace}/whole/plots/{trace}.log",
  shell:
    "python -m clio.trace.plotter characteristic {input} --output $(dirname {output[0]})"

rule msrc_window_analyze:
  input:
    "data/standardized/msrc/{trace}/{trace}.trace",
  output:
    "data/analysis/msrc/{trace}/win_{seconds}s/stats/stats.stats",
    "data/analysis/msrc/{trace}/win_{seconds}s/stats/stats.msgpack",
    "data/analysis/msrc/{trace}/win_{seconds}s/stats/log.txt",
  log:
    "logs/analysis/msrc/{trace}/win_{seconds}s/{trace}.log",
  shell:
    """
    python -m clio.trace.analyzer window {input} --output $(dirname {output[0]}) --window {wildcards.seconds} --log-level INFO --query "data['ts_record'] >= 0"
    """

rule msrc_window_plot_characteristics:
  input:
    "data/analysis/msrc/{trace}/win_{seconds}s/stats/stats.msgpack",
  output:
    directory("data/analysis/msrc/{trace}/win_{seconds}s/plots"),
    "data/analysis/msrc/{trace}/win_{seconds}s/plots/log.txt",
  log:
    "logs/analysis/msrc/{trace}/win_{seconds}s/plots/{trace}.log",
  shell:
    """
    python -m clio.trace.plotter characteristics {input} --output {output[0]} --log-level INFO --query "start_ts >= 0"
    """

rule msrc_window_pdf_characteristics:
  input:
    "data/analysis/msrc/{trace}/win_{seconds}s/plots",
  output:
    "data/analysis/msrc/{trace}/win_{seconds}s/pdfs/characteristics.pdf",
    "data/analysis/msrc/{trace}/win_{seconds}s/pdfs/log.txt",
  log:
    "logs/analysis/msrc/{trace}/win_{seconds}s/pdfs/{trace}.log",
  shell:
    """
    python -m clio.trace.pdfs characteristics {input} --output {output[0]} --log-level INFO --query "start_ts >= 0"
    """

## STARTER BALEEN
rule simple_workflow:
  input:
    http("https://ftp.pdl.cmu.edu/pub/datasets/Baleen24/storage/201910/Region1/full_0.1_0.1.trace"),
  output:
      "data/standardized/simple/full_0.1_0.1.trace",
  shell:
    """
    echo $(basename {input}) > {output}
    """
