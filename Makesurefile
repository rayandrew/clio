@options timing
# @options tracing

@define ENV_NAME "clio"
@define PATH "${MAMBA_ROOT_PREFIX}/envs/${ENV_NAME}/bin:${PATH}"
@define CUBLAS_WORKSPACE_CONFIG ":4096:8"
@define TF_CPP_MIN_LOG_LEVEL "3"
@define CUDA "${CUDA:-0}"
@define PYTORCH_CUDA_ALLOC_CONF "expandable_segments:True"
@define _TYPER_STANDARD_TRACEBACK "1"
@define TQDM_DISABLE "0"

# Experiment Options
@define FORCE "false"
@define EPOCHS "20"
@define PATH_TO_GENERATE_LIST_FOLDER "data/flashnet/characteristics/list_generator/1m/alibaba/*"
############################################################
#                       LIBRARIES
############################################################

@lib
  assert() {
    if [[ "$1" = "false" ]] || [[ "$1" = "0" ]]; then
      echo "Assertion failed: $2"
      exit 1
    fi
  }


  is_bool() {
    if [[ "$1" != "true" ]] && [[ "$1" != "false" ]] && [[ "$1" != "1" ]] && [[ "$1" != "0" ]]; then
      echo "false"
    else
      echo "true"
    fi
  }

  is_not_bool() {
    bool=$(is_bool $1)
    if [[ "$bool" = "true" ]]; then
      echo "false"
    else
      echo "true"
    fi
  }

  is_empty() {
    if [[ -z "$1" ]]; then
      echo 1
    elif [[ "$1" = "" ]]; then
      echo 1
    else
      echo 0
    fi
  }

  is_not_empty() {
    empty=$(is_empty $1)
    if [[ "$empty" = "1" ]]; then
      echo 0
    else
      echo 1
    fi
  }
  
  normalize_bool() {
    if [[ "$1" = "true" ]] || [[ "$1" = "1" ]]; then
      echo "true"
    else
      echo "false"
    fi
  }

############################################################
#                       GENERAL 
############################################################

@goal check_cuda
  echo "CUDA version: $(nvcc --version)"
  python -c "import torch; print(torch.cuda.is_available())"

############################################################
#                       FLASHNET
############################################################

@goal flashnet_get_alibaba_data
@reached_if [[ -f "raw-data/flashnet/alibaba-data/done" ]]
  mkdir -p "raw-data/flashnet/alibaba-data"
  DIRS=$(ssh -p 23 -m hmac-sha2-512 u369179-sub4@box.rs.ht "ls -d /home/trace_ori_60mins/alibaba.*")
  parallel --jobs 8 --line-buffer "rsync -Pavzr -e 'ssh -p 23 -m hmac-sha2-512' --include='*/' --include='*.labeled' --exclude='*' u369179-sub4@box.rs.ht:{} raw-data/flashnet/alibaba-data" ::: $DIRS
  echo "Alibaba data downloaded" > "raw-data/flashnet/alibaba-data/done"

@goal flashnet_get_msr_data
@reached_if [[ -f "raw-data/flashnet/msr-data/done" ]]
  mkdir -p "raw-data/flashnet/msr-data"
  DIRS=$(ssh -p 23 -m hmac-sha2-512 u369179-sub4@box.rs.ht "ls -d /home/trace_ori_60mins/msr.*")
  parallel --jobs 8 --line-buffer "rsync -Pavzr -e 'ssh -p 23 -m hmac-sha2-512' --include='*/' --include='*.labeled' --exclude='*' u369179-sub4@box.rs.ht:{} raw-data/flashnet/alibaba-data" ::: $DIRS
  echo "MSR data downloaded" > "raw-data/flashnet/msr-data/done"

@goal flashnet_get_tencent_data
@reached_if [[ -f "raw-data/flashnet/tencent-data/done" ]]
  mkdir -p "raw-data/flashnet/tencent-data"
  DIRS=$(ssh -p 23 -m hmac-sha2-512 u369179-sub4@box.rs.ht "ls -d /home/trace_ori_60mins/tencent.*")
  parallel --jobs 8 --line-buffer "rsync -Pavzr -e 'ssh -p 23 -m hmac-sha2-512' --include='*/' --include='*.labeled' --exclude='*' u369179-sub4@box.rs.ht:{} raw-data/flashnet/alibaba-data" ::: $DIRS
  echo "Tencent data downloaded" > "raw-data/flashnet/tencent-data/done"

# ==========================================================
# Experiment: Preprocess 
# ==========================================================

@define FLASHNET_CHARACTERISTICS_GENERATE_LIST_FILE "generate-window.nim"
@define FLASHNET_CHARACTERISTICS_WINDOW "1m"

@goal flashnet.preprocess @params NAME
@reached_if [[ -f "data/flashnet/preprocess/$NAME/done" ]]
  python -m clio.flashnet.cli.preprocessing \
      "raw-data/flashnet/$NAME-data/$NAME" \
      --output "data/flashnet/preprocess/$NAME"
  touch "data/flashnet/preprocess/$NAME/done"

@goal flashnet.characteristic.analysis @params NAME WINDOW
@reached_if [[ -f "data/flashnet/characteristics/analysis/$WINDOW/$NAME/done" ]]
  python -m clio.flashnet.cli.characteristic analyze \
      raw-data/flashnet/$NAME-data/$NAME.* \
      --output "data/flashnet/characteristics/analysis/$WINDOW/$NAME" \
      --window-size $WINDOW
  touch data/flashnet/characteristics/analysis/$WINDOW/$NAME/done

@goal flashnet.characteristic.split @params NAME WINDOW
@reached_if [[ -f "data/flashnet/characteristics/split/$WINDOW/$NAME/done" ]]
  python -m clio.flashnet.cli.characteristic split \
      raw-data/flashnet/$NAME-data/$NAME.* \
      --output "data/flashnet/characteristics/split/$WINDOW/$NAME" \
      --window-size $WINDOW
  touch data/flashnet/characteristics/split/$WINDOW/$NAME/done

@goal flashnet.characteristic.calculate @params NAME WINDOW
@reached_if [[ -f "data/flashnet/characteristics/calculate/$WINDOW/$NAME/done" ]]
  python -m clio.flashnet.cli.characteristic calculate \
      data/flashnet/characteristics/split/$WINDOW/$NAME/window \
      --characteristic "data/flashnet/characteristics/analysis/$WINDOW/$NAME/characteristics.msgpack" \
      --output "data/flashnet/characteristics/calculate/$WINDOW/$NAME"
  touch data/flashnet/characteristics/calculate/$WINDOW/$NAME/done

@goal flashnet.characteristic.listgenerator @params TYPE NAME WINDOW 
  python -m clio.flashnet.cli.characteristic listgenerator\
      "data/flashnet/characteristics/calculate/$WINDOW/$NAME" \
      --type $TYPE \
      --output "data/flashnet/characteristics/list_generator/$TYPE/$WINDOW/$NAME"

@goal flashnet.characteristic.generate @params NAME WINDOW GENERATE_LIST_FILE
@use_lib 
  assert $(is_not_empty $GENERATE_LIST_FILE) "Please provide a GENERATE_LIST_FILE $GENERATE_LIST_FILE"
  python -m clio.flashnet.cli.characteristic generate \
      data/flashnet/characteristics/split/$WINDOW/$NAME/window \
      --list-file "$GENERATE_LIST_FILE" \
      --output "data/flashnet/characteristics/generate/$WINDOW/$NAME"
  touch data/flashnet/characteristics/generate/$WINDOW/$NAME/done

# @goal flashnet.characteristic.generate.relabel
# @reached_if [[ -f "data/flashnet/characteristics/generate/alibaba/done" ]]
#   python -m clio.flashnet.cli.characteristic generate \
#       data/flashnet/characteristics/split/alibaba \
#       --list-file "./generate-window.nim" \
#       --output "data/flashnet/characteristics/generate-relabel/alibaba" \
#       --relabel

# @goal flashnet.characteristic.generate_static_prev_df
# @reached_if [[ -f "data/flashnet/characteristics/generate/alibaba/done" ]]
#   python -m clio.flashnet.cli.characteristic generate \
#       data/flashnet/characteristics/split/alibaba \
#       --list-file "./generate-window.nim" \
#       --output "data/flashnet/characteristics/generate/alibaba-static-prev-df" \
#       --static-prev-df
#   # touch data/flashnet/characteristics/generate/alibaba/done

@goal flashnet.characteristic.pipeline @params NAME WINDOW GENERATE_LIST_FILE
@depends_on flashnet.characteristic.analysis @args NAME WINDOW
@depends_on flashnet.characteristic.split @args NAME WINDOW
@depends_on flashnet.characteristic.calculate @args NAME WINDOW
# @depends_on flashnet.characteristic.listgenerator @args NAME WINDOW
# @depends_on flashnet.characteristic.generate @args NAME WINDOW GENERATE_LIST_FILE

@goal flashnet.characteristic.pipeline.alibaba
@depends_on flashnet.characteristic.pipeline @args "alibaba" FLASHNET_CHARACTERISTICS_WINDOW FLASHNET_CHARACTERISTICS_GENERATE_LIST_FILE

@goal flashnet.characteristic.listgenerator.alibaba
@depends_on flashnet.characteristic.listgenerator @args "no_sample" "alibaba" FLASHNET_CHARACTERISTICS_WINDOW

@goal flashnet.characteristic.generate.alibaba
@depends_on flashnet.characteristic.generate @args "alibaba" FLASHNET_CHARACTERISTICS_WINDOW FLASHNET_CHARACTERISTICS_GENERATE_LIST_FILE

## chang sample non sample
@goal flashnet.characteristic.generateglob.alibaba @glob "data/flashnet/characteristics/list_generator/no_sample/1m/alibaba/*/*.nim"
  echo GENERATE_LIST_FILE=$ITEM
  ./makesure flashnet.characteristic.generate.alibaba -D FLASHNET_CHARACTERISTICS_GENERATE_LIST_FILE=$ITEM

@goal flashnet.characteristic._select_data @params NAME WINDOW _FORCE @private
@depends_on flashnet.characteristic.analysis @args NAME WINDOW
@reached_if [[ -f "data/flashnet/characteristics/select.data/$WINDOW/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  python -m clio.flashnet.cli.characteristic select-data \
      data/flashnet/characteristics/split/$WINDOW/$NAME/window \
      --characteristic "data/flashnet/characteristics/analysis/$WINDOW/$NAME/characteristics.msgpack" \
      --output "data/flashnet/characteristics/select.data/$WINDOW/$NAME"
  touch data/flashnet/characteristics/select.data/$WINDOW/$NAME/done

@goal flashnet.characteristic.select_data.alibaba
@depends_on flashnet.characteristic._select_data @args "alibaba" FLASHNET_CHARACTERISTICS_WINDOW FORCE


# ==========================================================
# Experiment: Impact Analysis
# ==========================================================

@goal flashnet.impact.exp @params NAME _FORCE WINDOW
@use_lib
@reached_if [[ -f "data/flashnet/impact/exp/alibaba/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.impact exp \
      "data/flashnet/characteristics/generate/$WINDOW/alibaba/preprocessed/$NAME" \
      --output "data/flashnet/impact/exp/alibaba/$NAME" \
      --cuda $CUDA \
      --epochs $EPOCHS
  echo "Experiment done" > "data/flashnet/impact/exp/alibaba/$NAME/done"

@goal flashnet.impact.analysis @params NAME
@use_lib
  assert $(is_not_empty $NAME) "Please provide a NAME"
@reached_if [[ -f "data/flashnet/impact/analysis/alibaba/$NAME/done" ]]
  echo "Running analysis for $NAME"
  python -m clio.flashnet.cli.impact analyze \
    "data/flashnet/impact/exp/alibaba/$NAME" \
    --output "data/flashnet/impact/analysis/alibaba/$NAME"
  touch "data/flashnet/impact/analysis/alibaba/$NAME/done"

@define FLASHNET_IMPACT_NAME ""

@goal flashnet.impact
@depends_on flashnet.impact.exp @args FLASHNET_IMPACT_NAME FORCE FLASHNET_CHARACTERISTICS_WINDOW 
@depends_on flashnet.impact.analysis @args FLASHNET_IMPACT_NAME

@goal flashnet.characteristic.impact.alibaba @glob "data/flashnet/characteristics/generate/1m/alibaba/preprocessed/*.nim"
  NAME=$(basename "$ITEM")
  echo "$NAME"
  ./makesure flashnet.impact -D FLASHNET_IMPACT_NAME=$NAME


## ./makesure flashnet.characteristic.pipeline.alibaba , if want 1 file then ok.
## to loop through all file, use ./makesure flashnet.characteristic.generateglob.alibaba
## ./makesure flashnet.characteristic.impact.alibaba

# ==========================================================
# Experiment: Model Management
# ==========================================================

@define FLASHNET_EXP_DATASET "alibaba"
@define FLASHNET_EXP_NAME "pool_write_size_avg_4"
@define FLASHNET_EXP_WINDOW "1m"
@define FLASHNET_EXP_DIR_SUFFIX ""

############################################################
## EXP -- SINGLE
############################################################

####################
### INITIAL ONLY ###
####################

@goal flashnet.exp.single._initial_only @params DATASET NAME WINDOW EXP_DIR_SUFFIX _FORCE @private
@use_lib
@reached_if [[ -f "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.initial-only/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.single.run initial-only \
      "data/flashnet/characteristics/generate/$WINDOW/$DATASET/preprocessed/$NAME" \
      --output "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.initial-only" \
      --cuda $CUDA \
      --epochs $EPOCHS
  echo "Experiment done" > "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.initial-only/done"

@goal flashnet.exp.single.initial_only
@depends_on flashnet.exp.single._initial_only @args FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE

##############################
### INITIAL ONLY + DROPOUT ###
##############################

@goal flashnet.exp.single._initial_only.dropout @params DATASET NAME WINDOW EXP_DIR_SUFFIX _FORCE @private
@use_lib
@reached_if [[ -f "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.initial-only.dropout/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.single.run initial-only \
      "data/flashnet/characteristics/generate/$WINDOW/$DATASET/preprocessed/$NAME" \
      --output "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.initial-only.dropout" \
      --cuda $CUDA \
      --epochs $EPOCHS \
      --drop-rate 0.5
  echo "Experiment done" > "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.initial-only.dropout/done"

@goal flashnet.exp.single.initial_only.dropout
@depends_on flashnet.exp.single._initial_only.dropout @args FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE

#############################################
### INITIAL ONLY + DROPOUT + EVAL DROPOUT ###
#############################################

@goal flashnet.exp.single._initial_only.dropout.with_eval @params DATASET NAME WINDOW EXP_DIR_SUFFIX _FORCE @private
@use_lib
@reached_if [[ -f "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.initial-only.dropout.with-eval/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.single.run initial-only \
      "data/flashnet/characteristics/generate/$WINDOW/$DATASET/preprocessed/$NAME" \
      --output "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.initial-only.dropout.with-eval" \
      --cuda $CUDA \
      --epochs $EPOCHS \
      --drop-rate 0.5 \
      --use-eval-dropout
  echo "Experiment done" > "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.initial-only.dropout.with-eval/done"

@goal flashnet.exp.single.initial_only.dropout.with_eval
@depends_on flashnet.exp.single._initial_only.dropout.with_eval @args FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE

############################################################
## EXP -- SINGLE + RETRAIN
############################################################

@goal flashnet.exp.single._retrain @params STRATEGY DATASET NAME WINDOW EXP_DIR_SUFFIX _FORCE @private
@use_lib
@reached_if [[ -f "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.retrain.${STRATEGY}/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.single.run retrain "${STRATEGY}" \
      "data/flashnet/characteristics/generate/$WINDOW/$DATASET/preprocessed/$NAME" \
      --output "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.retrain.${STRATEGY}" \
      --cuda $CUDA \
      --epochs $EPOCHS
  echo "Experiment done" > "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/single.retrain.${STRATEGY}/done"

@goal flashnet.exp.single.retrain.window
@depends_on flashnet.exp.single._retrain @args "window" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE

@goal flashnet.exp.single.retrain.uncertain
@depends_on flashnet.exp.single._retrain @args "uncertain" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE

@goal flashnet.exp.single.retrain.entropy
@depends_on flashnet.exp.single._retrain @args "entropy" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE

@goal flashnet.exp.single.retrain.confidence
@depends_on flashnet.exp.single._retrain @args "confidence" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE

############################################################
## EXP -- MULTIPLE
############################################################

@goal flashnet.exp._multiple @params STRATEGY DATASET NAME WINDOW EXP_DIR_SUFFIX _FORCE EXTRA_PARAMS OUTPUT_DIR @private
@use_lib
@reached_if [[ -f "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/multiple.${OUTPUT_DIR:-$STRATEGY}/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  if [[ -z "$OUTPUT_DIR" ]]; then
    OUTPUT_DIR="${STRATEGY}"
  fi
  python -m clio.flashnet.cli.exp.multiple.run "${STRATEGY}" \
      "data/flashnet/characteristics/generate/$WINDOW/$DATASET/preprocessed/$NAME" \
      --output "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/multiple.${OUTPUT_DIR}" \
      --cuda $CUDA \
      --epochs $EPOCHS $EXTRA_PARAMS
  echo "Experiment done" > "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/multiple.${STRATEGY}/done"
  
@goal flashnet.exp.multiple.admit.window
@depends_on flashnet.exp._multiple @args "admit.window" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE "" ""

@goal flashnet.exp.multiple.admit.uncertain
@depends_on flashnet.exp._multiple @args "admit.uncertain" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE "" ""

@goal flashnet.exp.multiple.admit.uncertain.dropout
@depends_on flashnet.exp._multiple @args "admit.uncertain" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE "--drop-rate 0.3 --use-eval-dropout" "admit.uncertain.dropout"

@goal flashnet.exp.multiple.admit.entropy
@depends_on flashnet.exp._multiple @args "admit.entropy" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE "" ""

@goal flashnet.exp.multiple.admit.entropy.dropout
@depends_on flashnet.exp._multiple @args "admit.entropy" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE "--drop-rate 0.3 --use-eval-dropout" "admit.entropy.dropout"

@goal flashnet.exp.multiple.admit.confidence
@depends_on flashnet.exp._multiple @args "admit.confidence" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE "" ""

@goal flashnet.exp.multiple.admit.confidence.dropout
@depends_on flashnet.exp._multiple @args "admit.confidence" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE "--drop-rate 0.3 --use-eval-dropout" "admit.confidence.dropout"

@goal flashnet.exp.multiple.matchmaker.batch
@depends_on flashnet.exp._multiple @args "matchmaker.batch" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE "" ""

@goal flashnet.exp.multiple.matchmaker.window
@depends_on flashnet.exp._multiple @args "matchmaker.window" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE "" ""

@goal flashnet.exp.multiple.matchmaker.single
@depends_on flashnet.exp._multiple @args "matchmaker.single" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE "" ""

############################################################
## EXP -- ANALYSIS
############################################################

@goal flashnet.exp._analysis @params DATASET NAME EXP_DIR_SUFFIX ANALYSIS_DIR_SUFFIX QUERY @private
@use_lib
  if [[ -z "$QUERY" ]]; then
    QUERY=""
  fi

  if [[ -z "$ANALYSIS_DIR_SUFFIX" ]]; then
    ANALYSIS_DIR_SUFFIX=""
  else
    ANALYSIS_DIR_SUFFIX="${ANALYSIS_DIR_SUFFIX}__"
  fi
  
  python -m clio.flashnet.cli.exp.analysis \
      "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}" \
      --output "data/flashnet/$DATASET/$NAME/exp${EXP_DIR_SUFFIX}/__analysis__${ANALYSIS_DIR_SUFFIX}" \
      --query "$QUERY"

@goal flashnet.exp.analysis
@depends_on flashnet.exp._analysis @args FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_DIR_SUFFIX "" ""

############################################################
## EXP -- RUN
############################################################

@goal flashnet.exp._run.single @params DATASET NAME WINDOW EXP_DIR_SUFFIX FORCE @private
@depends_on flashnet.exp.single._initial_only @args DATASET NAME WINDOW EXP_DIR_SUFFIX FORCE
# @depends_on flashnet.exp.single._initial_only.dropout @args DATASET NAME WINDOW EXP_DIR_SUFFIX FORCE
# @depends_on flashnet.exp.single._initial_only.dropout.with_eval @args DATASET NAME WINDOW EXP_DIR_SUFFIX FORCE
@depends_on flashnet.exp._analysis @args DATASET NAME EXP_DIR_SUFFIX "" ""

@goal flashnet.exp.run.single
@depends_on flashnet.exp._run.single @args FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE

@goal flashnet.exp.run.single_and_retrain
@depends_on flashnet.exp.single.initial_only
@depends_on flashnet.exp.single.retrain.window
@depends_on flashnet.exp.single.retrain.entropy
@depends_on flashnet.exp.single.retrain.confidence
@depends_on flashnet.exp.single.retrain.uncertain
@depends_on flashnet.exp.analysis

@goal flashnet.exp.run.a
@depends_on flashnet.exp.single.initial_only
@depends_on flashnet.exp.single.retrain.window
@depends_on flashnet.exp.single.retrain.entropy
@depends_on flashnet.exp.single.retrain.confidence
@depends_on flashnet.exp.single.retrain.uncertain
@depends_on flashnet.exp.multiple.admit.window
@depends_on flashnet.exp.multiple.admit.uncertain
@depends_on flashnet.exp.multiple.admit.entropy
@depends_on flashnet.exp.multiple.admit.confidence
@depends_on flashnet.exp.multiple.matchmaker.window
@depends_on flashnet.exp.multiple.matchmaker.batch
@depends_on flashnet.exp.analysis

@goal flashnet.exp.run.a.with_dropout
@depends_on flashnet.exp.single.initial_only
@depends_on flashnet.exp.single.retrain.window
@depends_on flashnet.exp.single.retrain.entropy
@depends_on flashnet.exp.single.retrain.confidence
@depends_on flashnet.exp.single.retrain.uncertain
@depends_on flashnet.exp.multiple.admit.uncertain
@depends_on flashnet.exp.multiple.admit.uncertain.dropout
@depends_on flashnet.exp.multiple.admit.entropy
@depends_on flashnet.exp.multiple.admit.entropy.dropout
@depends_on flashnet.exp.multiple.admit.confidence
@depends_on flashnet.exp.multiple.admit.confidence.dropout
@depends_on flashnet.exp.analysis

############################################################
## TRACE -- ANALYSIS
############################################################

@goal flashnet.trace._analysis @params TASK DATASET NAME WINDOW DIR_SUFFIX _FORCE EXTRA_PARAMS @private
@use_lib
  assert $(is_not_empty $NAME) "Please provide a NAME"
  python -m clio.flashnet.cli.trace.analysis "${TASK}" \
      "data/flashnet/characteristics/generate/$WINDOW/$DATASET/preprocessed/$NAME" \
      --output "data/flashnet/$DATASET/$NAME/analysis${DIR_SUFFIX}/${TASK}" $EXTRA_PARAMS
  echo "Experiment done" > "data/flashnet/$DATASET/$NAME/analysis${DIR_SUFFIX}/${TASK}/done"

@goal flashnet.trace.analysis.correlation
@depends_on flashnet.trace._analysis @args "correlation" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE ""

@goal flashnet.trace.analysis.kde
@depends_on flashnet.trace._analysis @args "kde" FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_WINDOW FLASHNET_EXP_DIR_SUFFIX FORCE ""

# ==========================================================
# Experiment: Weekly Report
# ==========================================================

# March 2024

## Week 5

@goal weekly_report.march.year_24.week_5
@depends_on flashnet.exp.single.initial_only
@depends_on flashnet.exp.single.retrain.window
@depends_on flashnet.exp.single.retrain.entropy
@depends_on flashnet.exp.single.retrain.confidence
@depends_on flashnet.exp.single.retrain.uncertain
@depends_on flashnet.exp.analysis

# April 2024 

# Week 1

DATASET NAME EXP_DIR_SUFFIX ANALYSIS_DIR_SUFFIX QUERY

@goal weekly_report.april.year_24.week_1.analysis.simple_single_vs_multiple
@depends_on flashnet.exp._analysis @args FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_DIR_SUFFIX "single_vs_multiple" "is_substr_list_in_str(['single.initial-only', 'single.retrain.window',  'multiple.admit.window'], path)"

@goal weekly_report.april.year_24.week_1.analysis.simple_multiple_vs_prob_multiple
@depends_on flashnet.exp._analysis @args FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_DIR_SUFFIX "multiple_vs_prob_multiple" "is_substr_list_in_str(['multiple.admit.window', 'multiple.admit.uncertain', 'multiple.admit.entropy', 'multiple.admit.confidence'], path)"

@goal weekly_report.april.year_24.week_1.analysis.prob_multiple_vs_matchmaker
@depends_on flashnet.exp._analysis @args FLASHNET_EXP_DATASET FLASHNET_EXP_NAME FLASHNET_EXP_DIR_SUFFIX "multiple_vs_matchmaker" "is_substr_list_in_str(['multiple.admit.uncertain', 'multiple.admit.entropy', 'multiple.admit.confidence', 'multiple.matchmaker.window', 'multiple.matchmaker.batch'], path)"

@goal weekly_report.april.year_24.week_1.analysis
@depends_on weekly_report.april.year_24.week_1.analysis.simple_single_vs_multiple
@depends_on weekly_report.april.year_24.week_1.analysis.simple_multiple_vs_prob_multiple
@depends_on weekly_report.april.year_24.week_1.analysis.prob_multiple_vs_matchmaker
@depends_on flashnet.exp.analysis

@goal weekly_report.april.year_24.week_1
@depends_on flashnet.exp.single.initial_only
@depends_on flashnet.exp.single.retrain.window
@depends_on flashnet.exp.single.retrain.entropy
@depends_on flashnet.exp.single.retrain.confidence
@depends_on flashnet.exp.single.retrain.uncertain
@depends_on flashnet.exp.multiple.admit.window
@depends_on flashnet.exp.multiple.admit.uncertain
@depends_on flashnet.exp.multiple.admit.entropy
@depends_on flashnet.exp.multiple.admit.confidence
@depends_on flashnet.exp.multiple.matchmaker.window
@depends_on flashnet.exp.multiple.matchmaker.batch
@depends_on weekly_report.april.year_24.week_1.analysis