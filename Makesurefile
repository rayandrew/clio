@options timing
# @options tracing

@define ENV_NAME "clio"
@define PATH "${MAMBA_ROOT_PREFIX}/envs/${ENV_NAME}/bin:${PATH}"
@define CUBLAS_WORKSPACE_CONFIG ":4096:8"
@define TF_CPP_MIN_LOG_LEVEL "3"
@define CUDA "${CUDA:-0}"
@define PYTORCH_CUDA_ALLOC_CONF "expandable_segments:True"

# Experiment Options
@define FORCE "false"
@define EPOCHS "20"

############################################################
#                       LIBRARIES
############################################################

@lib assert
  assert() {
    if [[ "$1" = "false" ]] || [[ "$1" = "0" ]]; then
      echo "Assertion failed: $2"
      exit 1
    fi
  }


  is_bool() {
    if [[ "$1" != "true" ]] && [[ "$1" != "false" ]] && [[ "$1" != "1" ]] && [[ "$1" != "0" ]]; then
      echo "false"
    else
      echo "true"
    fi
  }

  is_not_bool() {
    bool=$(is_bool $1)
    if [[ "$bool" = "true" ]]; then
      echo "false"
    else
      echo "true"
    fi
  }

  is_empty() {
    if [[ -z "$1" ]]; then
      echo 1
    elif [[ "$1" = "" ]]; then
      echo 1
    else
      echo 0
    fi
  }

  is_not_empty() {
    empty=$(is_empty $1)
    if [[ "$empty" = "1" ]]; then
      echo 0
    else
      echo 1
    fi
  }
  
  normalize_bool() {
    if [[ "$1" = "true" ]] || [[ "$1" = "1" ]]; then
      echo "true"
    else
      echo "false"
    fi
  }

############################################################
#                       GENERAL 
############################################################

@goal check_cuda
  echo "CUDA version: $(nvcc --version)"
  python -c "import torch; print(torch.cuda.is_available())"

############################################################
#                       FLASHNET
############################################################

@goal flashnet_get_alibaba_data
@reached_if [[ -f "raw-data/flashnet/alibaba-data/done" ]]
  mkdir -p "raw-data/flashnet/alibaba-data"
  DIRS=$(ssh -p 23 -m hmac-sha2-512 u369179-sub4@box.rs.ht "ls -d /home/trace_ori_60mins/alibaba.*")
  parallel --jobs 8 --line-buffer "rsync -Pavzr -e 'ssh -p 23 -m hmac-sha2-512' --include='*/' --include='*.labeled' --exclude='*' u369179-sub4@box.rs.ht:{} raw-data/flashnet/alibaba-data" ::: $DIRS
  echo "Alibaba data downloaded" > "raw-data/flashnet/alibaba-data/done"

@goal flashnet_get_msr_data
@reached_if [[ -f "raw-data/flashnet/msr-data/done" ]]
  mkdir -p "raw-data/flashnet/msr-data"
  DIRS=$(ssh -p 23 -m hmac-sha2-512 u369179-sub4@box.rs.ht "ls -d /home/trace_ori_60mins/msr.*")
  parallel --jobs 8 --line-buffer "rsync -Pavzr -e 'ssh -p 23 -m hmac-sha2-512' --include='*/' --include='*.labeled' --exclude='*' u369179-sub4@box.rs.ht:{} raw-data/flashnet/alibaba-data" ::: $DIRS
  echo "MSR data downloaded" > "raw-data/flashnet/msr-data/done"

@goal flashnet_get_tencent_data
@reached_if [[ -f "raw-data/flashnet/tencent-data/done" ]]
  mkdir -p "raw-data/flashnet/tencent-data"
  DIRS=$(ssh -p 23 -m hmac-sha2-512 u369179-sub4@box.rs.ht "ls -d /home/trace_ori_60mins/tencent.*")
  parallel --jobs 8 --line-buffer "rsync -Pavzr -e 'ssh -p 23 -m hmac-sha2-512' --include='*/' --include='*.labeled' --exclude='*' u369179-sub4@box.rs.ht:{} raw-data/flashnet/alibaba-data" ::: $DIRS
  echo "Tencent data downloaded" > "raw-data/flashnet/tencent-data/done"

# ==========================================================
# Experiment: Preprocess 
# ==========================================================

@define FLASHNET_CHARACTERISTICS_GENERATE_LIST_FILE "generate-window.nim"
@define FLASHNET_CHARACTERISTICS_WINDOW "1m"

@goal flashnet.preprocess @params NAME
@reached_if [[ -f "data/flashnet/preprocess/$NAME/done" ]]
  python -m clio.flashnet.cli.preprocessing \
      "raw-data/flashnet/$NAME-data/$NAME" \
      --output "data/flashnet/preprocess/$NAME"
  touch "data/flashnet/preprocess/$NAME/done"

@goal flashnet.characteristic.analysis @params NAME WINDOW
@reached_if [[ -f "data/flashnet/characteristics/analysis/$WINDOW/$NAME/done" ]]
  python -m clio.flashnet.cli.characteristic analyze \
      raw-data/flashnet/$NAME-data/$NAME.* \
      --output "data/flashnet/characteristics/analysis/$WINDOW/$NAME" \
      --window-size $WINDOW
  touch data/flashnet/characteristics/analysis/$WINDOW/$NAME/done

@goal flashnet.characteristic.split @params NAME WINDOW
@reached_if [[ -f "data/flashnet/characteristics/split/$WINDOW/$NAME/done" ]]
  python -m clio.flashnet.cli.characteristic split \
      raw-data/flashnet/$NAME-data/$NAME.* \
      --output "data/flashnet/characteristics/split/$WINDOW/$NAME" \
      --window-size $WINDOW
  touch data/flashnet/characteristics/split/$WINDOW/$NAME/done

@goal flashnet.characteristic.calculate @params NAME WINDOW
@reached_if [[ -f "data/flashnet/characteristics/calculate/$WINDOW/$NAME/done" ]]
  python -m clio.flashnet.cli.characteristic calculate \
      data/flashnet/characteristics/split/$WINDOW/$NAME/window \
      --characteristic "data/flashnet/characteristics/analysis/$WINDOW/$NAME/characteristics.msgpack" \
      --output "data/flashnet/characteristics/calculate/$WINDOW/$NAME"
  touch data/flashnet/characteristics/calculate/$WINDOW/$NAME/done

# consider removing this the touch & if
@goal flashnet.characteristic.generate @params NAME WINDOW GENERATE_LIST_FILE
# @reached_if [[ -f "data/flashnet/characteristics/generate/$WINDOW/$NAME/done" ]]
@use_lib assert
  assert $(is_not_empty $GENERATE_LIST_FILE) "Please provide a GENERATE_LIST_FILE"
  python -m clio.flashnet.cli.characteristic generate \
      data/flashnet/characteristics/split/$WINDOW/$NAME/window \
      --list-file "$GENERATE_LIST_FILE" \
      --output "data/flashnet/characteristics/generate/$WINDOW/$NAME"
  # touch data/flashnet/characteristics/generate/$WINDOW/$NAME/done

@goal flashnet.characteristic.pipeline @params NAME WINDOW GENERATE_LIST_FILE
@depends_on flashnet.characteristic.analysis @args NAME WINDOW
@depends_on flashnet.characteristic.split @args NAME WINDOW
@depends_on flashnet.characteristic.calculate @args NAME WINDOW
@depends_on flashnet.characteristic.generate @args NAME WINDOW GENERATE_LIST_FILE

@goal flashnet.characteristic.pipeline.alibaba
@depends_on flashnet.characteristic.pipeline @args "alibaba" FLASHNET_CHARACTERISTICS_WINDOW FLASHNET_CHARACTERISTICS_GENERATE_LIST_FILE

@goal flashnet.characteristic._select_data @params NAME WINDOW _FORCE @private
@depends_on flashnet.characteristic.analysis @args NAME WINDOW
@reached_if [[ -f "data/flashnet/characteristics/select.data/$WINDOW/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  python -m clio.flashnet.cli.characteristic select-data \
      data/flashnet/characteristics/split/$WINDOW/$NAME/window \
      --characteristic "data/flashnet/characteristics/analysis/$WINDOW/$NAME/characteristics.msgpack" \
      --output "data/flashnet/characteristics/select.data/$WINDOW/$NAME"
  touch data/flashnet/characteristics/select.data/$WINDOW/$NAME/done

@goal flashnet.characteristic.select_data.alibaba
@depends_on flashnet.characteristic._select_data @args "alibaba" FLASHNET_CHARACTERISTICS_WINDOW FORCE


# ==========================================================
# Experiment: Impact Analysis
# ==========================================================

@goal flashnet.impact.exp @params NAME _FORCE WINDOW
@use_lib assert
@reached_if [[ -f "data/flashnet/impact/exp/alibaba/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.impact exp \
      "data/flashnet/characteristics/generate/$WINDOW/alibaba/preprocessed/$NAME" \
      --output "data/flashnet/impact/exp/alibaba/$NAME" \
      --cuda $CUDA \
      --epochs $EPOCHS
  echo "Experiment done" > "data/flashnet/impact/exp/alibaba/$NAME/done"

@goal flashnet.impact.analysis @params NAME
@use_lib assert
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running analysis for $NAME"
  python -m clio.flashnet.cli.impact analyze \
    "data/flashnet/impact/exp/alibaba/$NAME" \
    --output "data/flashnet/impact/analysis/alibaba/$NAME"

@define FLASHNET_IMPACT_NAME ""

@goal flashnet.impact
@depends_on flashnet.impact.exp @args FLASHNET_IMPACT_NAME FORCE FLASHNET_CHARACTERISTICS_WINDOW 
@depends_on flashnet.impact.analysis @args FLASHNET_IMPACT_NAME

# ==========================================================
# Experiment: Model Management
# ==========================================================

@define FLASHNET_STUDENT_NAME ""
@define FLASHNET_STUDENT_WINDOW "1m"

############################################################
## EXP -- SIMPLE
############################################################

####################
### INITIAL ONLY ###
####################

@goal flashnet.exp.simple._initial_only @params NAME WINDOW _FORCE @private
@use_lib assert
@reached_if [[ -f "data/flashnet/exp/simple.initial-only/exp/alibaba/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.simple exp-initial-only \
      "data/flashnet/characteristics/generate/$WINDOW/alibaba/preprocessed/$NAME" \
      --output "data/flashnet/exp/simple.initial-only/exp/alibaba/$NAME" \
      --cuda $CUDA \
      --epochs $EPOCHS
  echo "Experiment done" > "data/flashnet/exp/simple.initial-only/exp/alibaba/$NAME/done"

@goal flashnet.exp.simple.initial_only
@depends_on flashnet.exp.simple._initial_only @args FLASHNET_STUDENT_NAME FLASHNET_STUDENT_WINDOW FORCE

############################
## USE RECENT MODEL       ##
## NEW MODEL EVERY WINDOW ##
############################

@goal flashnet.exp.simple._use_recent_model @params NAME WINDOW _FORCE @private
@use_lib assert
@reached_if [[ -f "data/flashnet/exp/simple.use-recent-model/exp/alibaba/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.simple exp-use-recent-model \
      "data/flashnet/characteristics/generate/$WINDOW/alibaba/preprocessed/$NAME" \
      --output "data/flashnet/exp/simple.use-recent-model/exp/alibaba/$NAME" \
      --cuda $CUDA \
      --epochs $EPOCHS
  echo "Experiment done" > "data/flashnet/exp/simple.use-recent-model/exp/alibaba/$NAME/done"

@goal flashnet.exp.simple.use_recent_model
@depends_on flashnet.exp.simple._use_recent_model @args FLASHNET_STUDENT_NAME FLASHNET_STUDENT_WINDOW FORCE

##############################################
## USE RECENT MODEL                         ##
## NEW MODEL WHEN PERF THRESHOLD IS REACHED ##
##############################################

@goal flashnet.exp.simple._use_recent_model_threshold @params NAME WINDOW _FORCE @private
@use_lib assert
@reached_if [[ -f "data/flashnet/exp/simple.use-recent-model-threshold/exp/alibaba/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.simple exp-use-recent-model-threshold \
      "data/flashnet/characteristics/generate/$WINDOW/alibaba/preprocessed/$NAME" \
      --output "data/flashnet/exp/simple.use-recent-model-threshold/exp/alibaba/$NAME" \
      --cuda $CUDA \
      --epochs $EPOCHS
  echo "Experiment done" > "data/flashnet/exp/simple.use-recent-model-threshold/exp/alibaba/$NAME/done"

@goal flashnet.exp.simple.use_recent_model_threshold
@depends_on flashnet.exp.simple._use_recent_model_threshold @args FLASHNET_STUDENT_NAME FLASHNET_STUDENT_WINDOW FORCE


############################################################
## EXP -- ENSEMBLE
############################################################

####################
### INITIAL ONLY ###
####################

@goal flashnet.exp.ensemble._initial_only @params NAME WINDOW _FORCE @private
@use_lib assert
@reached_if [[ -f "data/flashnet/exp/ensemble.initial-only/exp/alibaba/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.ensemble exp-initial-only \
      "data/flashnet/characteristics/generate/$WINDOW/alibaba/preprocessed/$NAME" \
      --output "data/flashnet/exp/ensemble.initial-only/exp/alibaba/$NAME" \
      --cuda $CUDA \
      --epochs $EPOCHS
  echo "Experiment done" > "data/flashnet/exp/ensemble.initial-only/exp/alibaba/$NAME/done"

@goal flashnet.exp.ensemble.initial_only
@depends_on flashnet.exp.ensemble._initial_only @args FLASHNET_STUDENT_NAME FLASHNET_STUDENT_WINDOW FORCE

##############################
### INITIAL ONLY + DROPOUT ###
##############################

@goal flashnet.exp.ensemble._initial_only.dropout @params NAME WINDOW _FORCE @private
@use_lib assert
@reached_if [[ -f "data/flashnet/exp/ensemble.initial-only.dropout/exp/alibaba/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.ensemble exp-initial-only \
      "data/flashnet/characteristics/generate/$WINDOW/alibaba/preprocessed/$NAME" \
      --output "data/flashnet/exp/ensemble.initial-only.dropout/exp/alibaba/$NAME" \
      --cuda $CUDA \
      --epochs $EPOCHS \
      --drop-rate 0.5
  echo "Experiment done" > "data/flashnet/exp/ensemble.initial-only.dropout/exp/alibaba/$NAME/done"

@goal flashnet.exp.ensemble.initial_only.dropout
@depends_on flashnet.exp.ensemble._initial_only.dropout @args FLASHNET_STUDENT_NAME FLASHNET_STUDENT_WINDOW FORCE

############################
## USE RECENT MODEL       ##
## NEW MODEL EVERY WINDOW ##
############################

@goal flashnet.exp.ensemble._use_recent_model @params NAME WINDOW _FORCE @private
@use_lib assert
@reached_if [[ -f "data/flashnet/exp/ensemble.use-recent-model/exp/alibaba/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.ensemble exp-use-recent-model \
      "data/flashnet/characteristics/generate/$WINDOW/alibaba/preprocessed/$NAME" \
      --output "data/flashnet/exp/ensemble.use-recent-model/exp/alibaba/$NAME" \
      --cuda $CUDA \
      --epochs $EPOCHS
  echo "Experiment done" > "data/flashnet/exp/ensemble.use-recent-model/exp/alibaba/$NAME/done"

@goal flashnet.exp.ensemble.use_recent_model
@depends_on flashnet.exp.ensemble._use_recent_model @args FLASHNET_STUDENT_NAME FLASHNET_STUDENT_WINDOW FORCE

############################################################
## EXP -- STUDENT
############################################################

####################
### INITIAL ONLY ###
####################

@goal flashnet.exp.student._initial_only @params NAME WINDOW _FORCE @private
@use_lib assert
@reached_if [[ -f "data/flashnet/exp/student.initial-only/exp/alibaba/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.student exp-initial-only \
      "data/flashnet/characteristics/generate/$WINDOW/alibaba/preprocessed/$NAME" \
      --output "data/flashnet/exp/student.initial_only/exp/alibaba/$NAME" \
      --cuda $CUDA \
      --epochs $EPOCHS
  echo "Experiment done" > "data/flashnet/exp/student.initial-only/exp/alibaba/$NAME/done"


@goal flashnet.exp.student.initial_only
@depends_on flashnet.exp.student._initial_only @args FLASHNET_STUDENT_NAME FLASHNET_STUDENT_WINDOW FORCE

############################
## USE RECENT MODEL       ##
## NEW MODEL EVERY WINDOW ##
############################

@goal flashnet.exp.student._use_recent_model @params NAME WINDOW _FORCE @private
@use_lib assert
@reached_if [[ -f "data/flashnet/exp/student.use-recent-model/exp/alibaba/$NAME/done" ]] && [[ "$(normalize_bool $_FORCE)" = "false" ]]
  assert $(is_not_empty $NAME) "Please provide a NAME"
  echo "Running experiment for $NAME on CUDA $CUDA"
  python -m clio.flashnet.cli.exp.student exp-use-recent-model \
      "data/flashnet/characteristics/generate/$WINDOW/alibaba/preprocessed/$NAME" \
      --output "data/flashnet/exp/student.use-recent-model/exp/alibaba/$NAME" \
      --cuda $CUDA \
      --epochs $EPOCHS
  echo "Experiment done" > "data/flashnet/exp/student.use-recent-model/exp/alibaba/$NAME/done"

@goal flashnet.exp.student.use_recent_model
@depends_on flashnet.exp.student._use_recent_model @args FLASHNET_STUDENT_NAME FLASHNET_STUDENT_WINDOW FORCE

############################################################
## ANALYSIS
############################################################

@goal flashnet.student._analysis @params NAME @private
python -m clio.flashnet.cli.exp.analysis \
      "data/flashnet/exp/simple.initial-only/exp/alibaba/$NAME" \
      "data/flashnet/exp/simple.use-recent-model/exp/alibaba/$NAME" \
      "data/flashnet/exp/simple.use-recent-model-threshold/exp/alibaba/$NAME" \
      "data/flashnet/exp/ensemble.initial-only/exp/alibaba/$NAME" \
      "data/flashnet/exp/ensemble.use-recent-model/exp/alibaba/$NAME" \
      "data/flashnet/exp/student.initial-only/exp/alibaba/$NAME" \
      "data/flashnet/exp/student.use-recent-model/exp/alibaba/$NAME" \
      --output "data/flashnet/exp/analysis/alibaba/$NAME"

@goal flashnet.student.analysis
@depends_on flashnet.student._analysis @args FLASHNET_STUDENT_NAME

@goal flashnet.student._run @params NAME WINDOW _FORCE @private
@depends_on flashnet.exp.simple._initial_only @args NAME WINDOW FORCE
@depends_on flashnet.exp.simple._use_recent_model @args NAME WINDOW FORCE
@depends_on flashnet.exp.simple._use_recent_model_threshold @args NAME WINDOW FORCE
@depends_on flashnet.exp.ensemble._initial_only @args NAME WINDOW FORCE
@depends_on flashnet.exp.ensemble._use_recent_model @args NAME WINDOW FORCE
@depends_on flashnet.exp.student._initial_only @args NAME WINDOW FORCE
@depends_on flashnet.exp.student._use_recent_model @args NAME WINDOW FORCE
@depends_on flashnet.student._analysis @args NAME

@goal flashnet.student.run
@depends_on flashnet.student._run @args FLASHNET_STUDENT_NAME FLASHNET_STUDENT_WINDOW FORCE

@goal flashnet.student._run.a @params NAME WINDOW _FORCE @private
@depends_on flashnet.exp.simple._initial_only @args NAME WINDOW FORCE
@depends_on flashnet.exp.ensemble._initial_only @args NAME WINDOW FORCE
@depends_on flashnet.exp.ensemble._initial_only.dropout @args NAME WINDOW FORCE
@depends_on flashnet.student._analysis @args NAME

@goal flashnet.student.run.a
@depends_on flashnet.student._run.a @args FLASHNET_STUDENT_NAME FLASHNET_STUDENT_WINDOW FORCE

